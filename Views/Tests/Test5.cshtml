@{
    ViewBag.Title = "Тест";
}
<div id="left" class="position">
    <h2>Нужна помощь с тестами? Обратитесь к обучающим материалам.</h2>
    <!-- Кнопки для открытия модальных окон -->
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#studyMaterialsHistoryOfJavaScript">Как появился язык программирования JavaScript</button>
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#studyMaterialsTypeCast">Приведение типов</button>
    <br>
    <br>
    <br>
    <form onSubmit="countScore('@ViewBag.IdUser',5)" action="~/UserAccount" method="post">
        <!--Циферку тут надо менять на номер теста-->
        <h3>Основы JavaScript</h3>
        <br>
        <p><b>Что такое ECMAScript?</b></p>
        <p><input type="radio" name="q1" value="0" checked> Новый язык программирования.</p>
        <p><input type="radio" name="q1" value="0"> Переработанная реализация Javascript.</p>
        <p><input type="radio" name="q1" value="1"> Спецификация языка Javascript.</p>

        <p><b>Что получится, если сложить true + false?</b></p>
        <p><input type="radio" name="q2" value="0" checked> "truefalse"</p>
        <p><input type="radio" name="q2" value="0"> 0</p>
        <p><input type="radio" name="q2" value="1"> 1</p>
        <p><input type="radio" name="q2" value="0"> NaN</p>

        <p><b>Чему равно 0 || "" || 2 || undefined || true || falsе ?</b></p>
        <p><input type="radio" name="q3" value="0" checked> 0</p>
        <p><input type="radio" name="q3" value="0"> ""</p>
        <p><input type="radio" name="q3" value="1"> 2</p>
        <p><input type="radio" name="q3" value="0"> undefined</p>
        <p><input type="radio" name="q3" value="0"> true</p>
        <p><input type="radio" name="q3" value="0"> false</p>

        <p><b>Верно ли сравнение: "ёжик" > "яблоко"?</b></p>
        <p><input type="radio" name="q4" value="1" checked> Да.</p>
        <p><input type="radio" name="q4" value="0"> Нет.</p>
        <p><input type="radio" name="q4" value="0"> Зависит от локальных настроек браузера.</p>

        <p><b>Чему равно 0 || 1 && 2 || 3 ?</b></p>
        <p><input type="radio" name="q5" value="0" checked> 0</p>
        <p><input type="radio" name="q5" value="0"> 1</p>
        <p><input type="radio" name="q5" value="1"> 2</p>
        <p><input type="radio" name="q5" value="0"> 3</p>
        <p><input type="radio" name="q5" value="0"> true</p>
        <p><input type="radio" name="q5" value="0"> false</p>

        <p><b>Чему равна сумма [] + 1 + 2?</b></p>
        <p><input type="radio" name="q6" value="0" checked> 1</p>
        <p><input type="radio" name="q6" value="0"> NaN</p>
        <p><input type="radio" name="q6" value="0"> undefined</p>
        <p><input type="radio" name="q6" value="1"> 12</p>
        <p><input type="radio" name="q6" value="0"> Другое</p>

        <p><b> Чему равно 2 && 1 && null && 0 && undefined ?</b></p>
        <p><input type="radio" name="q7" value="0" checked> 2</p>
        <p><input type="radio" name="q7" value="0"> 1</p>
        <p><input type="radio" name="q7" value="1"> Null</p>
        <p><input type="radio" name="q7" value="0"> 0</p>
        <p><input type="radio" name="q7" value="0"> undefined</p>
        <p><input type="radio" name="q7" value="0"> false</p>

        <p><b>Что выведет этот код?</b></p>
        <p><b>alert( 20e-1['toString'](2) );</b></p>
        <p><input type="radio" name="q8" value="0" checked>2</p>
        <p><input type="radio" name="q8" value="1"> 10</p>
        <p><input type="radio" name="q8" value="0"> 20</p>

        <p><b>Какой результат будет у выражения ниже?</b></p>
        <p><b>null + {0:1}[0] + [,[1],][1][0]</b></p>
        <p><input type="radio" name="q9" value="0" checked> 0</p>
        <p><input type="radio" name="q9" value="0"> 1</p>
        <p><input type="radio" name="q9" value="1"> 2</p>
        <p><input type="radio" name="q9" value="0"> undefined</p>

        <p><b>Есть ли различия между проверками:</b></p>
        <p><b>if( x <= 100 ) {...}</b></p>
        <p><b>и</b></p>
        <p><b>if( !(x > 100) ) {...}</b></p>
        <p><input type="radio" name="q10" value="1" checked> Да, существует значение x, для которого они работают по-разному.</p>
        <p><input type="radio" name="q10" value="0"> Нет, они полностью взаимозаменяемы.</p>
        <p><input type="radio" name="q10" value="0"> Зависит от браузера.</p>

        <p><input type="submit" value="Отправить"></p>
    </form>
</div>


<!-- Модальные окна -->
<!-- Окно с обучающей информацией по истории языка JavaScript -->
<div class="modal fade bd-example-modal-lg" id="studyMaterialsHistoryOfJavaScript" tabindex="-1" role="dialog" aria-labelledby="studyMaterialsHistoryOfJavaScriptTitle" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="studyMaterialsHistoryOfJavaScriptTitle">Как появился язык программирования JavaScript</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>
                    JavaScript — мультипарадигменный язык программирования. Поддерживает объектно-ориентированный, императивный и функциональный стили. Является реализацией стандарта ECMAScript (стандарт ECMA-262).
                    JavaScript обычно используется как встраиваемый язык для программного доступа к объектам приложений. Наиболее широкое применение находит в браузерах как язык сценариев для придания интерактивности веб-страницам.
                    Основные архитектурные черты: динамическая типизация, слабая типизация, автоматическое управление памятью, прототипное программирование, функции как объекты первого класса.
                </p>
                <p>
                    JavaScript появился в 1995 году и первоначально назывался Mocha, затем был переименован в LiveScript и предназначался как для программирования на стороне клиента, так и для программирования на стороне сервера.
                    4 декабря 1995 года LiveScript переименовали в JavaScript, получив соответствующую лицензию у Sun.
                </p>
                <p>
                    По инициативе компании Netscape была проведена стандартизация языка ассоциацией ECMA. Стандартизированная версия имеет название ECMAScript, описывается стандартом ECMA-262. Первой версии спецификации соответствовал JavaScript версии 1.1, а также языки JScript и ScriptEasy.
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
            </div>
        </div>
    </div>
</div>

<!-- Окно с обучающей информацией по приведению типов -->
<div class="modal fade bd-example-modal-lg" id="studyMaterialsTypeCast" tabindex="-1" role="dialog" aria-labelledby="studyMaterialsTypeCastTitle" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="studyMaterialsTypeCastTitle">Преобразование типов в JavaScript</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>
                    Чаще всего операторы и функции автоматически приводят переданные им значения к нужному типу. Например, alert автоматически преобразует любое значение к строке. Математические операторы преобразуют значения к числам.
                    Есть также случаи, когда нам нужно явно преобразовать значение в ожидаемый тип.
                </p>
                <p>
                    <b>Строковое преобразование</b>
                    <br>
                    Строковое преобразование происходит, когда требуется представление чего-либо в виде строки. Например, alert(value) преобразует значение к строке.
                    Также мы можем использовать функцию String(value), чтобы преобразовать значение к строке: let value = true; value = String(value);
                    Преобразование происходит очевидным образом. false становится "false", null становится "null" и т.п.
                </p>
                <p>
                    <b>Численное преобразование</b>
                    <br>
                    Численное преобразование происходит в математических функциях и выражениях. Например, когда операция деления / применяется не к числу: alert( "6" / "2" ); // 3, строки преобразуются в числа
                    Явное преобразование часто применяется, когда мы ожидаем получить число из строкового контекста, например из текстовых полей форм.
                    Если строка не может быть явно приведена к числу, то результатом преобразования будет NaN.
                </p>
                <p>
                    <b>Логическое преобразование</b>
                    <br>
                    Происходит в логических операциях, но также может быть выполнено явно с помощью функции Boolean(value).
                    Правило преобразования: значения, которые интуитивно «пустые», вроде 0, пустой строки, null, undefined и NaN, становятся false. Все остальные значения становятся true.
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
            </div>
        </div>
    </div>
</div>