@{
    ViewBag.Title = "Тест";
}
<div id="left" class="position">
    <h2>Нужна помощь с тестами? Обратитесь к обучающим материалам.</h2>
    <!-- Кнопки для открытия модальных окон -->
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#studyMaterialsCharactersAndStrings">Символы и строки в C++</button>
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#studyMaterialsReferences">Ссылки в C++</button>
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#studyMaterialsPointers">Указатели в C++</button>
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#studyMaterialsArrays">Одномерные и двумерные массивы в C++</button>
    <br>
    <br>
    <br>
    <form onSubmit="countScore('@ViewBag.IdUser',3)" action="~/UserAccount" method="post">
        <h3>Тестирование в С++: строки, ссылки, указатели, массивы.</h3>
        <p><b>Какая из следующих функций считывает 100 символов из входного потока в строку x?</b></p>
        <p><input type="radio" name="q1" value="0" checked> readline(x, 100, 'n');</p>
        <p><input type="radio" name="q1" value="0"> cin.getline(x, 100, 'n');</p>
        <p><input type="radio" name="q1" value="1"> cin.getline(100, x, 'n');</p>
        <p><input type="radio" name="q1" value="0"> read(x);</p>

        <p><b>Укажите зарезервированное ключевое слово для динамического выделения памяти!</b></p>
        <p><input type="radio" name="q2" value="0" checked> create</p>
        <p><input type="radio" name="q2" value="1"> malloc</p>
        <p><input type="radio" name="q2" value="0"> new</p>
        <p><input type="radio" name="q2" value="0"> value</p>

        <p><b>Какой стандартный код используется для Символьных данных типа char в С++?</b></p>
        <p><input type="radio" name="q3" value="0" checked> Код ASCI</p>
        <p><input type="radio" name="q3" value="1"> Код UTF-8</p>
        <p><input type="radio" name="q3" value="0"> Код ASCII</p>
        <p><input type="radio" name="q3" value="0"> Код cp-1251</p>


        <p><b>Укажите строку, которая возвращает адрес первого элемента в массиве arr?</b></p>
        <p><input type="radio" name="q4" value="0" checked> arr[0];</p>
        <p><input type="radio" name="q4" value="0"> & arr;</p>
        <p><input type="radio" name="q4" value="1"> arr;</p>
        <p><input type="radio" name="q4" value="0"> arr[1];</p>

        <p><b>В какой из следующих записей используется операция разименования?</b></p>
        <p><input type="radio" name="q5" value="0" checked> a ;</p>
        <p><input type="radio" name="q5" value="0"> *a;</p>
        <p><input type="radio" name="q5" value="1"> address(a);</p>
        <p><input type="radio" name="q5" value="0"> & a;</p>

        <p><b>В каком из вариантов ответов объявлен одномерный массив?</b></p>
        <p><input type="radio" name="q6" value="0" checked> int anarray[20][20];</p>
        <p><input type="radio" name="q6" value="0"> int array[20, 20];</p>
        <p><input type="radio" name="q6" value="1"> char array[20];</p>

        <p><b>Словосочетание "Hello world!" может быть сохранено в символьном массиве размером n элементов. Укажите чему равно n?</b></p>
        <p><input type="radio" name="q7" value="0" checked> 12</p>
        <p><input type="radio" name="q7" value="0"> 10</p>
        <p><input type="radio" name="q7" value="1"> 13</p>

        <p><b>Какой заголовочный файл необходимо подключить, чтобы вызвать функцию isalpha()?</b></p>
        <p><input type="radio" name="q8" value="0" checked> cstring</p>
        <p><input type="radio" name="q8" value="0"> conio.h</p>
        <p><input type="radio" name="q8" value="0"> cctype</p>
        <p><input type="radio" name="q8" value="1"> ifstream.h</p>

        <p><b>Что такое ссылка?</b></p>
        <p><input type="radio" name="q9" value="0" checked> оператор</p>
        <p><input type="radio" name="q9" value="0"> нет правильного ответа</p>
        <p><input type="radio" name="q9" value="0"> используется для переименования объектов</p>
        <p><input type="radio" name="q9" value="1"> ссылка является псевдонимом для объекта</p>

        <p><b>Какой заголовочный файл следует подключить, чтобы можно было пользоваться приведением типов данных?</b></p>
        <p><input type="radio" name="q10" value="0" checked> cctype</p>
        <p><input type="radio" name="q10" value="0"> Никакого</p>
        <p><input type="radio" name="q10" value="1"> cmath</p>

        <p><input type="submit" value="Отправить"></p>
    </form>
</div>

<!-- Модальные окна -->
<!-- Окно с обучающей информацией по арифметическим операциям -->
<div class="modal fade bd-example-modal-lg" id="studyMaterialsCharactersAndStrings" tabindex="-1" role="dialog" aria-labelledby="studyMaterialsCharactersAndStringsTitle" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="studyMaterialsCharactersAndStringsTitle">Символы и строки в C++</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>
                    Символ – элементарная единица, некоторый набор которых несет определенный смысл. В языке программирования С++ предусмотрено использование символьных констант.
                    Символьная константа – это целочисленное значение (типа int) представленное в виде символа, заключённого в одинарные кавычки, например 'a'. В таблице ASCII представлены символы и их целочисленные значения.
                </p>
                <p>
                    Строки в С++ представляются как массивы элементов типа char, заканчивающиеся нуль-терминатором \0 называются С строками или строками в стиле С.
                    \0  — символ нуль-терминатора.
                    Символьные строки состоят из набора символьных констант заключённых в двойные кавычки. При объявлении строкового массива необходимо учитывать наличие в конце строки нуль-терминатора,
                    и отводить дополнительный байт под него.
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
            </div>
        </div>
    </div>
</div>

<!-- Окно с обучающей информацией по ссылкам -->
<div class="modal fade bd-example-modal-lg" id="studyMaterialsReferences" tabindex="-1" role="dialog" aria-labelledby="studyMaterialsReferencesTitle" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="studyMaterialsReferencesTitle">Ссылки в C++</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>
                    Ссылки – особый тип данных, являющийся скрытой формой указателя, который при использовании автоматически разименовывается.
                    Ссылка может быть объявлена как другим именем, так и как псевдоним переменной, на которую ссылается.
                    При объявлении ссылки перед её именем ставится символ амперсанда &, сама же ссылка должна быть проинициализирована именем переменной, на которую она ссылается.
                    Тип данных, на который указывает ссылка, может быть любым, но должен совпадать с объектом, на который ссылается, то есть с типом данных ссылочной переменной.
                </p>
                <p>
                    // структура объявления ссылок
                    /*тип*/ &/*имя ссылки*/ = /*имя переменной*/;
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
            </div>
        </div>
    </div>
</div>

<!-- Окно с обучающей информацией по указателям -->
<div class="modal fade bd-example-modal-lg" id="studyMaterialsPointers" tabindex="-1" role="dialog" aria-labelledby="studyMaterialsPointersTitle" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="studyMaterialsPointersTitle">Указатели в C++</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>
                    Указатель – переменная, значением которой является адрес ячейки памяти. То есть указатель ссылается на блок данных  из области памяти, причём на самое его начало.
                    Указатель может ссылаться на переменную или функцию. Для этого нужно знать адрес переменной или функции. Чтобы узнать адрес конкретной переменной в С++ существует унарная операция взятия адреса &.
                    Такая операция извлекает адрес объявленных переменных, для того, чтобы его присвоить указателю.
                </p>
                <p>
                    Указатели используются для передачи по ссылке данных, что намного ускоряет процесс обработки этих данных (в том случае, если объём данных большой), так как их не надо копировать,
                    как при передаче по значению, то есть, используя имя переменной. В основном указатели используются для организации динамического распределения памяти, например при объявлении массива.
                </p>
                <p>
                    //объявление указателя
                    /*тип данных*/  * /*имя указателя*/;
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
            </div>
        </div>
    </div>
</div>

<!-- Окно с обучающей информацией по массивам -->
<div class="modal fade bd-example-modal-lg" id="studyMaterialsArrays" tabindex="-1" role="dialog" aria-labelledby="studyMaterialsArraysTitle" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="studyMaterialsArraysTitle">Одномерные и двумерные массивы в C++</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>
                    Массив это структура данных, представленная в виде группы ячеек одного типа, объединенных под одним единым именем. Массивы используются для обработки большого количества однотипных данных.
                    Важно помнить, что имя массива является указателем.
                </p>
                <p>
                    Указатели используются для передачи по ссылке данных, что намного ускоряет процесс обработки этих данных (в том случае, если объём данных большой), так как их не надо копировать,
                    как при передаче по значению, то есть, используя имя переменной. В основном указатели используются для организации динамического распределения памяти, например при объявлении массива.
                </p>
                <p>
                    <b>Одномерные массивы</b>
                    <br>
                    Одномерный массив — массив, с одним параметром, характеризующим количество элементов одномерного массива. Фактически одномерный массив — это массив, у которого может быть только одна строка,
                    и n-е количество столбцов.
                    //синтаксис  объявления одномерного массива в С++:
                    /*тип данных*/  /*имя одномерного массива*/[/*размерность одномерного массива*/];
                </p>
                <p>
                    <b>Двумерные массивы</b>
                    <br>
                    Двумерный массив — это одномерный массив одномерных массивов. Визуально его можно представить как таблицу со строками и столбцами.
                    // синтаксис объявления двумерного массива
                    /*тип данных*/ /*имя массива*/[/*количество строк*/][/*количество столбцов*/];
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
            </div>
        </div>
    </div>
</div>